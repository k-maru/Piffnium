// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Piffnium.Web.Infrastructure.EntityFramework;

namespace Piffnium.Web.Infrastructure.EntityFramework.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20180604143703_add comparations table")]
    partial class addcomparationstable
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799");

            modelBuilder.Entity("Piffnium.Web.Domain.Entities.Comparison", b =>
                {
                    b.Property<long>("ComparisonId")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("ComparedAt");

                    b.Property<string>("ComparisonKey")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.Property<string>("DestinationFileName")
                        .IsRequired()
                        .IsUnicode(true);

                    b.Property<long>("SessionId");

                    b.HasKey("ComparisonId")
                        .HasName("pk_comparions");

                    b.HasIndex("SessionId");

                    b.ToTable("Comparisons");
                });

            modelBuilder.Entity("Piffnium.Web.Domain.Entities.Difference", b =>
                {
                    b.Property<long>("ComparisonId");

                    b.Property<string>("DifferenceFileName")
                        .IsRequired()
                        .IsUnicode(true);

                    b.Property<double>("DifferenceRate");

                    b.Property<string>("SourceFileName")
                        .IsRequired()
                        .IsUnicode(true);

                    b.HasKey("ComparisonId")
                        .HasName("pk_differences");

                    b.ToTable("Differences");
                });

            modelBuilder.Entity("Piffnium.Web.Domain.Entities.Project", b =>
                {
                    b.Property<long>("ProjectId")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .IsUnicode(true);

                    b.HasKey("ProjectId")
                        .HasName("pk_projects");

                    b.HasAlternateKey("ProjectName")
                        .HasName("uk_projects_projectName");

                    b.ToTable("Projects");
                });

            modelBuilder.Entity("Piffnium.Web.Domain.Entities.Session", b =>
                {
                    b.Property<long>("SessionId")
                        .ValueGeneratedOnAdd();

                    b.Property<long>("ProjectId");

                    b.Property<DateTime>("StartedAt");

                    b.HasKey("SessionId")
                        .HasName("pk_sessions");

                    b.HasIndex("ProjectId");

                    b.ToTable("Sessions");
                });

            modelBuilder.Entity("Piffnium.Web.Domain.Entities.Comparison", b =>
                {
                    b.HasOne("Piffnium.Web.Domain.Entities.Session", "Session")
                        .WithMany("Comparisons")
                        .HasForeignKey("SessionId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piffnium.Web.Domain.Entities.Difference", b =>
                {
                    b.HasOne("Piffnium.Web.Domain.Entities.Comparison", "Comparison")
                        .WithOne("Difference")
                        .HasForeignKey("Piffnium.Web.Domain.Entities.Difference", "ComparisonId")
                        .OnDelete(DeleteBehavior.Restrict);
                });

            modelBuilder.Entity("Piffnium.Web.Domain.Entities.Session", b =>
                {
                    b.HasOne("Piffnium.Web.Domain.Entities.Project", "Project")
                        .WithMany("Sessions")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict);
                });
#pragma warning restore 612, 618
        }
    }
}
